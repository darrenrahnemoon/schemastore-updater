/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JsonSchemaForCircleCiConfigurationFiles {
  /**
   * The version field is intended to be used in order to issue warnings for deprecation or breaking changes.
   */
  version: 2 | 2.1;
  jobs?: {
    [k: string]:
      | {
          /**
           * Options for [docker executor](https://circleci.com/docs/2.0/configuration-reference/#docker)
           */
          docker: {
            /**
             * The name of a custom docker image to use
             */
            image: string;
            /**
             * The command used as executable when launching the container
             */
            entrypoint?: string | string[];
            /**
             * The command used as pid 1 (or args for entrypoint) when launching the container
             */
            command?: string | string[];
            /**
             * Which user to run the command as
             */
            user?: string;
            /**
             * A map of environment variable names and values
             */
            environment?: {
              [k: string]: string;
            };
            /**
             * Authentication for registries using standard `docker login` credentials
             */
            auth?: {
              username?: string;
              password?: string;
            };
            /**
             * Authentication for AWS EC2 Container Registry (ECR)
             */
            aws_auth?: {
              aws_access_key_id?: string;
              aws_secret_access_key?: string;
            };
          }[];
          /**
           * Amount of CPU and RAM allocated to each container in a job. (Only works with the `docker` key for paid accounts and is subject to change in a future pricing update. **Note:** Paid accounts must request to use this feature by opening a support ticket (or by contacting their Customer Success Manager when applicable) and non-paid users must request to use this feature by opening a ticket at <https://support.circleci.com/hc/en-us/requests/new>.)
           */
          resource_class?: "small" | "medium" | "medium+" | "large" | "xlarge";
          [k: string]: any;
        }
      | {
          machine:
            | boolean
            | {
                /**
                 * This must be true in order to enable the `machine` executor.  Is required if no other value is specified
                 */
                enabled?: boolean;
                /**
                 * The image to use
                 */
                image?: string;
              };
          [k: string]: any;
        }
      | {
          /**
           * Options for macOS executor
           */
          macos: {
            /**
             * The version of Xcode that is installed on the virtual machine
             */
            xcode: string;
          };
          [k: string]: any;
        };
  };
  /**
   * Used for orchestrating all jobs. Each workflow consists of the workflow name as a key and a map as a value
   */
  workflows?: {
    /**
     * The Workflows `version` field is used to issue warnings for deprecation or breaking changes during Beta.
     */
    version: 2;
    [k: string]: {
      /**
       * Specifies which triggers will cause this workflow to be executed. Default behavior is to trigger the workflow when pushing to a branch.
       */
      triggers?: {
        /**
         * See the [crontab man page](http://pubs.opengroup.org/onlinepubs/7908799/xcu/crontab.html)
         */
        cron?: string;
        /**
         * A map defining rules for execution on specific branches
         */
        filters?: {
          branches?: Filter;
        };
      };
      jobs?: (
        | string
        | {
            [k: string]: {
              /**
               * Jobs are run in parallel by default, so you must explicitly require any dependencies by their job name.
               */
              requires?: string[];
              /**
               * The name of the context. The default name is `org-global`
               */
              context?: string;
              /**
               * A job may have a `type` of `approval` indicating it must be manually approved before downstream jobs may proceed.
               */
              type?: "approval";
              /**
               * A map defining rules for execution on specific branches
               */
              filters?: {
                [k: string]: {
                  [k: string]: any;
                };
              };
            };
          })[];
    };
  };
  [k: string]: any;
}
/**
 * A map defining rules for execution on specific branches
 */
export interface Filter {
  /**
   * Either a single branch specifier, or a list of branch specifiers
   */
  only?: string | string[];
  /**
   * Either a single branch specifier, or a list of branch specifiers
   */
  ignore?: string | string[];
}
