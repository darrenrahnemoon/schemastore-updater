/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForGoogleAppsScriptManifestFiles {
  /**
   * Version of the server to use when executing this project.
   */
  runtimeVersion?: "stable" | "v8" | "depreacted_es5";
  /**
   * The script time zone in one of the available ZoneId values such as "America/Denver".
   */
  timeZone?: string;
  /**
   * A list of advanced services and libraries.
   */
  dependencies?: {
    /**
     * The list of advanced services enabled for use by the script project.
     */
    enabledAdvancedServices?: {
      /**
       * The identifier used to refer to this service in the code of the Apps Script project.
       */
      userSymbol: string;
      /**
       * The identifier of the service that is shown in the API discovery document (e.g., drive).
       */
      serviceId: string;
      /**
       * The enabled version of the service (e.g., "v1").
       */
      version: string;
      [k: string]: any;
    }[];
    /**
     * The list of libraries used by the script project.
     */
    libraries?: {
      /**
       * The label that is used in the script project code to refer to this library.
       */
      userSymbol: string;
      /**
       * The script ID of the library's script project. You can find a script ID in the library script's URL or in the script editor by selecting **File > Project properties**.
       */
      libraryId: string;
      /**
       * The version of the library that is used by the script. This is either a version number or stable, meaning the last version created.
       */
      version: string;
      /**
       * If true, version is ignored and the script uses the current library project saved code, even if that code has not been saved to a new version.
       */
      developmentMode?: boolean;
      [k: string]: any;
    }[];
    [k: string]: any;
  };
  /**
   * The script project's web app configuration. Only used if the project is deployed as a web app.
   */
  webapp?: {
    /**
     * The levels of permission for running the web app.
     */
    access?: "MYSELF" | "DOMAIN" | "ANYONE" | "ANYONE_ANONYMOUS";
    /**
     * The identity under which the web app executes.
     */
    executeAs?: "USER_ACCESSING" | "USER_DEPLOYING";
    [k: string]: any;
  };
  /**
   * The location where exceptions are logged.
   */
  exceptionLogging?: "NONE" | "STACKDRIVER";
  /**
   * The definition of authorization scopes used by the script project.
   */
  oauthScopes?: string[];
  /**
   * A list of HTTPS URL prefixes. If present, any URL endpoint fetched must match one of the prefixes in this list. This can help to protect user data.
   */
  urlFetchWhitelist?: string[];
  /**
   * The script project's API executable configuration. Only used if the project is deployed for API execution.
   */
  executionApi?: {
    /**
     * Determines who has permission to run the script from the API.
     */
    access?: "MYSELF" | "DOMAIN" | "ANYONE" | "ANYONE_ANONYMOUS";
    [k: string]: any;
  };
  /**
   * Defines manifest values specific to Sheets.
   */
  sheets?: {
    /**
     * A list of defined macros and their associated properties.
     */
    macros?: {
      /**
       * The name of the macro as it appears in the Google Sheets UI.
       */
      menuName: string;
      /**
       * The name of the Apps Script function that executes the macro. By default this matches the menuName for functions automatically created, but this is not a requirement.
       */
      functionName: string;
      /**
       * Defines the keyboard shortcut that executes the macro. This must be of the form Ctrl+Alt+Shift+Number, where Number is a single-digit. Macros without shortcuts can only be executed from the Tools > Macros menu.
       */
      defaultShortcut: string;
      [k: string]: any;
    }[];
    [k: string]: any;
  };
  /**
   * Data Studio add-on manifest.
   */
  dataStudio?: {
    /**
     * Display name for add-on.
     */
    name: string;
    /**
     * URL for logo image of add-on.
     */
    logoUrl: string;
    /**
     * Company name for the add-on.
     */
    company: string;
    addonUrl?: string;
    companyUrl?: string;
    /**
     * URL for support information of the add-on.
     */
    supportUrl: string;
    /**
     * Short description about the add-on.
     */
    description: string;
    /**
     * List of sources or services that can be accessed with this add-on.
     */
    sources?: string[];
    /**
     * Map of template name to report ID.
     */
    templates?: {
      [k: string]: any;
    };
    /**
     * Even shorter description used in gallery cards. Only a maximum of 114 characters will be shown on the card.
     */
    shortDescription?: string;
    /**
     * List of AuthTypes supported.
     */
    authType?: ("NONE" | "KEY" | "USER_PASS" | "OAUTH2")[];
    /**
     * Url for privacy policy information about the add-on.
     */
    privacyPolicyUrl?: string;
    /**
     * Url for terms of service information about the add-on.
     */
    termsOfServiceUrl?: string;
    [k: string]: any;
  };
  [k: string]: any;
}
